name : CI_release

on:
    push:
        tags:
          - "[0-9]+.[0-9]+.[0-9]+"
    release:
        types: [released]
    workflow_dispatch:

env: 
    AZURE_RG_NAME: ${{ vars.PROJECT_NAME }}-rg-${{ vars.AZURE_RESOURCE_IDENTIFIER }}



jobs:
    build_backend:
        runs-on: ubuntu-latest
        environment: production

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Build the app
              run: dotnet publish -c Release --property:PublishDir=publish # Publish the app to the publish folder of the API project
              working-directory: ./backend # specify where to find the solution file
            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                name: backend-artifact
                path: ./backend/ParkNDeploy.Api/publish
                

            
    build_frontend:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Checkout repository
          uses: actions/checkout@v4
          with: 
            fetch-depth: 0 
    
        - name: Get branch name
          id: get_branch
          run: |
            # Find the branch that the tag is associated with
            BRANCH=$(git branch -r --contains "$GITHUB_SHA" | grep -v '\->' | sed 's|origin/||' | head -n 1)
            echo "Branch: $BRANCH"
            echo "branch_name=$BRANCH" >> $GITHUB_OUTPUT
        
        - name: Check out the branch
          run: |
            git checkout ${{ steps.get_branch.outputs.branch_name }}
    
        - name: Edit package version with tag version
          # You can use several github actions or use basic jq command line tool
          run: |
            echo "`jq '.version="${{ github.ref_name }}"' package.json`" > package.json
          working-directory: ./frontend
    

        - name: Build the app
          run: npm install && npm run build
          working-directory: ./frontend

        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with:
                name: frontend-artifact
                path: ./frontend/dist

        - name: Set up Git
          run: |
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
              
        - name: Commit changes
          run: |
            git add -A
            git commit -m "feat(version) : Update package json version to ${{ github.ref_name }}"
          
        - name: Push changes
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            git push origin HEAD



    call_cd_workflow:
      needs: [build_backend, build_frontend]
      permissions:
          id-token: write # Require write permission to Fetch an OIDC token (required for federated credential)
      uses: daxterman/parkndeploy/.github/workflows/CD-release.yml@main
      secrets: inherit
